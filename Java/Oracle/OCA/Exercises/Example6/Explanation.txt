    System.out.println(Boolean.parseBoolean("true"));
    System.out.println(new Boolean(null));
    //System.out.println(new Boolean());
    System.out.println(new Boolean("true"));
    System.out.println(new Boolean("trUE"));

First option will print a true.

Second option will print false.

Third option will not compile because Boolean class does not have a no-args constructor. Remember 
that no other wrapper class has a no-args constructor eiter. So new Integer(), or new Long() will 
also not compile.

Fourth option: Case of the String parameter does not matter. As long as the String equals "true" after ignoring 
the case, it will be parsed as true.  However, if you have extra spaces, for example, " true" or "true ", 
it will be parsed as false.

Fifth option: Case of the String parameter does not matter. As long as the String equals "true" after 
ignoring the case, it will be parsed as true.  However, if you have extra spaces, for example, " true" 
or "true ", it will be parsed as false.

Sobre los booleanos:

1. Tienen dos constructores: Boolean(String) y Boolean(boolean). El constructor de strings permite un objeto Boolean 
representando el valor "true" si el argumento del string no es nulo y es igual, ignorando mayúsculas,al string "true".
De otra manera, el valor sería falso.

Ejemplos:

new Boolean("True") proporciona un objeto booleano que representa "true".
new Boolean("yes") proporciona un objeto booleano que representa "false".

El constructor booleano se explica solo.

2. La clase Boolean tiene dos métodos estáticos helper para crear booleanos - parseBoolean y valueOf.
El método Boolean.parseBoolean(String) returna un boolean primitivo y no un objeto Booleano (Nota - Esto es igual para otros 
métodos como Integer.parseInt - que retornan valores primitivos y no objetos). El booleano retornado representa el valor true 
si el argumento string no es nulo y es igual, ignorando mayúsculas, al string "true".

El método Boolean.valueOf(String) y su versión sobrecargada, por otro lado, trabajan de manera muy similar pero retorna 
una referencia a un objeto Boolean.TRUE o Boolean.FALSE. Observa que ellos no crean un nuevo objeto Booleano pero solo retornan 
las constantes estáticas TRUE or FALSE definidas en su clase Boolean.