class A {
    public void doA(int k) throws Exception {  // 0
        for(int i=0; i< 10; i++) {
            if(i == k) throw new Exception("Index of k is "+i); // 1
        }
    }
    public void doB(boolean f) { // 2
        if(f) {
            doA(15); // 3
        }
        else return;
    }
    public static void main(String[] args) { // 4
        A a = new A();
        a.doB(args.length>0); // 5
    }
 }

 Si la linea 1 es encerrada en un try block, el método aún tendrá excepciones en su declaración, 
 el cuál forzará la llamada a este método para bien declarar Excepción y lanzarla o colocar la llamada 
 en un try block.

Cualquier excepción chequeada debe ser manejada bien usando un try block o el método que genera la excepción 
debe declarar que lance esa excepción.

En este caso, doA() declara que lance la excepción.
doB() está llamando a doA() pero no está manejando la excepción generada por doA().
Entonces, debe declararse esa excepción. Ahora, el método main() está llamando doB(), 
el cuál genera una excepción (debido a una llamada a doA()). Por lo tanto, main() debe 
también envolver la llamada doB() en un try block o declararse en su cláusula throws.