Un par de conceptos importantes para el código:

public class ChangeTest {
    private int myValue = 0;

    public void showOne(int myValue) {
        myValue = myValue;
    }

    public void showTwo(int myValue) {
        this.myValue = myValue;
    }

    public static void main(String[] args) {
        ChangeTest ct = new ChangeTest();
        ct.showTwo(200);
        System.out.println(ct.myValue);

        ct.showOne(100);
        System.out.println(ct.myValue);
    }  
}

1. Dentro de un método de instancia, se puede acceder al objeto actual de la misma clase usando 'this'. Por lo tanto, cuando se 
accede a this.myValue, se accede al miembro instanciado myValue de la instancia de ChangeTest.

2. Si se declara una variable local (o parámetro de método) con el mismo nombre que el nombre de campo de la instancia, la variable local 
"tapa o cubre" el miembro de campo. Idealmente, debería ser capaz de acceder al campo del miembro en el método directamente 
usando el nombre del miembro (en este ejemplo, myValue). Sin embargo, debido al encubrimiento, cuando se use myValue, se refiere 
a la variable local en vez del campo de la instancia.

En el método shotTwo, hay dos variables accesibles con el mimsmo nombre myValue. Una es el parámetro de método y otra es el 
miembro de campo del objeto CT. Idealmente, debería ser capaz de acceder al campo de miembro en el método directamente 
usando el nombre myValue, pero en este caso, el parámetro de método cubre el campo de miembro porque tiene el mismo nombre. 
Así que usando this.myValue, está cambiando la variable de instancia myValue asignandole el valor contenido en la variable 
local myValue, el cuál es 200. Así que si se imprime ct.myValue, se verá el número 200.

Ahora, en el método showOne, hay dos variables accesibles con el mismo nombre myValue. Una es el parámetro del método y otro es el campo 
del miembro del objeto ChangeTest. Así que usando se use myValue, de echo se usa el parámetro del método en vez del campo del miembro del objeto.

Por lo tanto, cuando se hace myValue = myValue; se asigna el parámetro contenido en el parámetro del método a si mismo. No se está cambiando el campo 
del miemrbo myValue. Así, cuando se imprime ese valor, se verá el 200.